services:
  app:
    build:
      context: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./:/app
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py migrate && 
            python manage.py runserver 0.0.0.0:8000"
    restart: on-failure
    depends_on:
      - db
      - redis

  db:
    image: postgres:16.3-alpine
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - library_data:$PGDATA

  redis:
    image: redis:alpine
    restart: on-failure
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - $REDISDATA
      - redis_data:/data
    command:
      - redis-server /usr/local/etc/redis/redis_logs.conf

  celery:
    build:
      context: .
    command: celery -A CityLibraryServiceAPI worker --loglevel=INFO
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - redis

  beat:
    build:
      context: .
    command: celery -A CityLibraryServiceAPI beat --loglevel=INFO
    restart: on-failure
    env_file:
      - .env
    depends_on:
      - celery
      - redis

volumes:
  redis_data:
  library_data: